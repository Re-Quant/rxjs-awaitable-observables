name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  prepush-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.4
      - name: Yarn install
        run: yarn install
      - name: Runing prepush
        run: JEST_COLLECT_COVERAGE=true yarn run pre-push
      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist
      - name: Archive test coverage artifacts
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: coverage

  publish:
    needs: prepush-and-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Download 'dist' from the previous Job
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Download 'coverage' from the previous Job
        uses: actions/download-artifact@v1
        with:
          name: coverage
      - name: Set GIT username & email
        run: git config --global user.name 'GIT Workflow CI' && git config --global user.email dev@korniychuk.pro
      - name: Update package patch version
        run: npm version patch -m 'Update package version version to %s'
      - name: Generate public package.json
        run: yarn run gen-public-package.json
      - name: Generate public README.md
        run: cp README.md dist/
#      - name: NPM Authentication
#        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
#        env:
#          NPM_TOKEN: ${{secrets.npm_token}}
#      - name: Publishing NPM Package
#        run: npm publish dist --access public && echo "Successfully released version $(node -p "require('./package.json').version")!"
#      - name: Pushing new commit && tag to the git repo
#        run: git push --no-verify && git push --tags --no-verify
      - name: Upload coverage report to codecov.io
        run: npx codecov --token "${CODECOV_TOKEN}" --disable=gcov
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
